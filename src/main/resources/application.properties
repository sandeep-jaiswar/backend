########################
# APP INFO
########################
spring.application.name=backend
server.port=8080
server.servlet.context-path=/api
spring.profiles.active=prod
server.forward-headers-strategy=framework

########################
# LOGGING
########################
logging.level.root=INFO
logging.level.org.springframework.web=INFO
logging.file.path=/logs
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

########################
# POSTGRESQL DATABASE
########################
spring.datasource.url=jdbc:postgresql://localhost:5432/chat_app
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# HikariCP Tuning
spring.datasource.hikari.maximum-pool-size=30
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.leak-detection-threshold=2000
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.initialization-fail-timeout=1

# Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.batch_versioned_data=true
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.use_query_cache=true
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory
spring.transaction.default-timeout=30
spring.jpa.properties.hibernate.connection.isolation=2
spring.jpa.properties.hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform

# Connection Pool Monitoring
spring.datasource.hikari.metrics.enabled=true
spring.datasource.hikari.metrics.pool-name=HikariPool
spring.datasource.hikari.metrics.registry-name=micrometer

########################
# OAUTH2 CONFIGURATION
########################
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=email,profile

# Security Configuration
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=name

########################
# REDIS CONFIGURATION
########################
spring.redis.host=${SPRING_REDIS_HOST}
spring.redis.port=6379
spring.redis.timeout=60000

# Redis Pool (Lettuce)
spring.redis.lettuce.pool.max-active=20
spring.redis.lettuce.pool.max-idle=10
spring.redis.lettuce.pool.min-idle=5
spring.redis.lettuce.pool.max-wait=-1
spring.redis.lettuce.shutdown-timeout=100

# Enable Cache
spring.cache.type=redis

########################
# KAFKA CONFIGURATION
########################
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS}

# Consumer
spring.kafka.consumer.group-id=your-consumer-group
spring.kafka.consumer.max-poll-records=500
spring.kafka.consumer.fetch-max-bytes=52428800
spring.kafka.consumer.fetch-min-bytes=1
spring.kafka.consumer.fetch-max-wait-ms=500
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.isolation-level=read_committed

# Kafka Listener
spring.kafka.listener.ack-mode=manual_immediate
spring.kafka.listener.concurrency=3
spring.kafka.listener.poll-timeout=3000
spring.kafka.listener.batch-listener=true
spring.kafka.listener.auto-startup=true

# Producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.retries=3
spring.kafka.producer.acks=all
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432
spring.kafka.producer.compression-type=snappy
spring.kafka.producer.max-in-flight-requests-per-connection=5
spring.kafka.producer.linger-ms=5

########################
# ACTUATOR & MONITORING
########################
management.server.port=8081
management.endpoints.enabled-by-default=false
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true

########################
# TOMCAT TUNING
########################
server.tomcat.max-threads=200
server.tomcat.min-spare-threads=20

########################
# SSL (optional)
########################
# server.ssl.enabled=true
# server.ssl.key-store=classpath:keystore.p12
# server.ssl.key-store-password=changeit
# server.ssl.key-store-type=PKCS12
# server.ssl.key-alias=backend

########################
# SHUTDOWN
########################
spring.lifecycle.timeout-per-shutdown-phase=20s

# JWT Configuration
jwt.secret=${JWT_SECRET}
jwt.expiration=86400
jwt.refresh-expiration=604800
